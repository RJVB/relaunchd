#!/usr/bin/env bash
#
# Copyright (c) 2015 Mark Heily <mark@heily.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

if [ `whoami` = 'root' ] ; then
	pkgdatadir="/var/db/launchd/run"
else
	pkgdatadir="$HOME/.local/share/launchd/run"
fi
watchdir="$pkgdatadir/new"

command=$1
shift

enabled () {
	if [ $1 == 1 ] ;then
# 		echo "Override any disable flags" 1>&2
		return 0
	else
		tr -d "[:space:]" < ${2} | fgrep -iq '"Disabled":true'
		if [ $? == 0 ] ;then
			echo "${2} has Disabled set (use 'load -w' to ignore)" 1>&2
			return 1
		else
# 			echo "${2} is enabled" 1>&2
			return 0
		fi
	fi
}

case $command in
load)
	force=0
	if [ "${1}" = "-w" -o "${1}" = "-F" ] ;then
		force=1
		shift
	fi
	for path in $* ; do
		if [ -d $path ] ; then
			for j in $path/*.json ;do
				if enabled ${force} ${j} ; then
					cp -p ${j} $watchdir
				fi
			done
		else
			set -x
			if enabled ${force} ${path} ;then
				cp -p $path $watchdir
			fi
			set +x
		fi
	done
	kill -HUP `cat $pkgdatadir/launchd.pid`
	;;

unload)
	filespec=`find $* -name '*.json'`
	for path in $filespec ; do
		label=`basename "$path" | sed 's/\.json$//'`
		touch $watchdir/$label.unload
	done
	kill -HUP `cat $pkgdatadir/launchd.pid`
	;;

list)
	listfile="$pkgdatadir/launchctl.list"
	rm -f $listfile
	kill -USR1 `cat $pkgdatadir/launchd.pid`
	while [ ! -f $listfile ] ; do sleep 0.2 ; done
	cat $listfile
	;;

*)
	echo "invalid command"
	exit 1
esac

exit 0
